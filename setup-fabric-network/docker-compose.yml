#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
# Create (topology) the network, from the docker images, composed of:
# - FABRIC-CA
# - ORDERER
# - PEER 0
# - PEER 1
# - PEER 2
# - CLI
#
version: '2'

networks:
  basic:

services:
  # FABRIC-CA

  ca.example.com:
    image: hyperledger/fabric-ca
    container_name: ca.example.com
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/68f0443ad4146ffe5f6c364e6d9ad9cb0360bcb0e849e8181c76a79fe4caf679_sk  # FIX WHEN REGENERATING CERTS
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --cfg.identities.allowremove -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config

    networks:
      - basic

# ORDERER

  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/etc/hyperledger/msp/orderer
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/:/etc/hyperledger/msp/peerOrg1
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer2.org1.example.com/:/etc/hyperledger/msp/peerOrg1
    networks:
      - basic

# PEER 0

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      # CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      # CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      # CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      # CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      # couchdb
    networks:
      - basic

# PEER 1

  peer1.org1.example.com:
      container_name: peer1.org1.example.com
      image: hyperledger/fabric-peer
      environment:
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_PEER_ID=peer1.org1.example.com
        - CORE_LOGGING_PEER=debug
        - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
        - CORE_PEER_LOCALMSPID=Org1MSP
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
        - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
        # # the following setting starts chaincode containers on the same
        # # bridge network as the peers
        # # https://docs.docker.com/compose/networking/
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
        # CORE_LEDGER_STATE_STATEDATABASE=CouchDB
        # CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
        # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
        # provide the credentials for ledger to connect to CouchDB.  The username and password must
        # match the username and password set for the associated CouchDB.
        # CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
        # CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      working_dir: /opt/gopath/src/github.com/hyperledger/fabric
      command: peer node start
      # command: peer node start --peer-chaincodedev=true
      ports:
        - 8051:7051
        - 8053:7053
      volumes:
          - /var/run/:/host/var/run/
          - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/msp/peer
          - ./crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
          - ./config:/etc/hyperledger/configtx
      depends_on:
        - orderer.example.com
        # couchdb
      networks:
        - basic

# PEER 2

  peer2.org1.example.com:
      container_name: peer2.org1.example.com
      image: hyperledger/fabric-peer
      environment:
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_PEER_ID=peer2.org1.example.com
        - CORE_LOGGING_PEER=debug
        - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
        - CORE_PEER_LOCALMSPID=Org1MSP
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
        - CORE_PEER_ADDRESS=peer2.org1.example.com:7051
        # # the following setting starts chaincode containers on the same
        # # bridge network as the peers
        # # https://docs.docker.com/compose/networking/
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
        # CORE_LEDGER_STATE_STATEDATABASE=CouchDB
        # CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
        # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
        # provide the credentials for ledger to connect to CouchDB.  The username and password must
        # match the username and password set for the associated CouchDB.
        # CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
        # CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=ca.example.org orderer.example.com peer0.org1.example.com peer1.org1.example.com peer2.org1.example.com
      working_dir: /opt/gopath/src/github.com/hyperledger/fabric
      command: peer node start
      # command: peer node start --peer-chaincodedev=true
      ports:
        - 9051:7051
        - 9053:7053
      volumes:
          - /var/run/:/host/var/run/
          - ./crypto-config/peerOrganizations/org1.example.com/peers/peer2.org1.example.com/msp:/etc/hyperledger/msp/peer
          - ./crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
          - ./config:/etc/hyperledger/configtx
          - ./../chaincode/:/opt/gopath/src/github.com/
      depends_on:
        - orderer.example.com
        # couchdb
      networks:
        - basic

  # couchdb:
  #   container_name: couchdb
  #   image: hyperledger/fabric-couchdb
  #   # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
  #   # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
  #   environment:
  #     - COUCHDB_USER=
  #     - COUCHDB_PASSWORD=
  #   ports:
  #     - 5984:5984
  #   networks:
  #     - basic

# CLI

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
    networks:
        - basic
    depends_on:
     - orderer.example.com
     - peer0.org1.example.com
     - peer1.org1.example.com
     - peer2.org1.example.com
     # - couchdb
